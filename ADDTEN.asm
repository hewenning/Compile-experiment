INT21	MACRO X
		MOV DL,X
		MOV AH,02H
		INT 21H
		ENDM
DATA	SEGMENT
MESS 	DB 'ADD TOW MULBIT DECIMAL NUMBERS',0DH,0AH
		DB 0DH,0AH,'$'
DATA1	DB 33H,39H,31H,37H,34H
DATA2	DB 36H,35H,30H,38H,32H
DATA3	DB 6 DUP(?)
DATA	ENDS
STACK	SEGMENT
STA		DB 20 DUP(?)
TOP		EQU LENGTH STA
STACK	ENDS
CODE	SEGMENT
ASSUME	CS:CODE,DS:DATA,SS:STACK,ES:DATA
START:	MOV AX,DATA
		MOV DS,AX
		MOV AX,STACK
		MOV SS,AX
		MOV AX,TOP
		MOV SP,AX
		MOV DX,OFFSET MESS
		MOV AH,09H
		INT 21H
		MOV SI,OFFSET DATA1
		MOV BX,05
		CALL DISPL
		INT21 2BH
		MOV SI,OFFSET DATA2
		MOV BX,05
		CALL DISPL
		MOV SI,OFFSET DATA1
		MOV DI,OFFSET DATA2
		CALL ADDA
		INT21 3DH
		MOV SI,OFFSET DATA3
		MOV BX,05
		CALL DISPL
		INT21 0DH
		INT21 0AH
		MOV AH,4CH
		INT 21H

DISPL	PROC NEAR
DS1:	INT21 [SI+BX-1]
		DEC BX
		JNZ DS1
		RET
DISPL	ENDP

ADDA	PROC NEAR
		MOV DX,SI
		MOV BP,DI
		MOV BX,05
AD1:	SUB BYTE PTR [SI+BX-1],30H
		SUB BYTE PTR [DI+BX-1],30H
		DEC BX
		JNZ AD1
		MOV CX,05
		CLC
		MOV BX,OFFSET DATA3
AD2:	MOV AL,[SI]
		MOV AH,[DI]
		ADC AL,AH
		AAA
		MOV [BX],AL
		INC SI
		INC DI
		INC BX
		LOOP AD2
		MOV SI,OFFSET DATA3
		MOV BX,05
AD3:	ADD BYTE PTR [SI+BX-1],30H
		DEC BX
		JNZ AD3
		RET
ADDA	ENDP
CODE	ENDS
		END START

